"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'h43&^c57q6+412$crxl3)i68ef=l!#fs=8vha+7di&t4i$u8w9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'snsapp.apps.SnsappConfig',
    'sns_api.apps.SnsApiConfig',    # 追加　SNSappのAPI用アプリ
    # 'django_rest_allauth',          # 追加　DRF-allauth
    'rest_framework',               # 追加　DRFライブラリ全般
    'rest_framework.authtoken',     # 追加　DRF-allauthのloginに使用
    'django_filters',               # 追加　フィルタ付きのAPIビュー用
    'corsheaders',                  # 追加　Reactサーバーからのアクセス許可機能
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',                    # 追加　Reactサーバーからのアクセス許可機能
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# ReactサーバーでDRFのAPIを叩くために設定
CORS_ORIGIN_WHITELIST = [
    'http://localhost:3000',    # ReactサーバーのIP:ポートをホワイトリストに追加
]

# REST Framework共通設定
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',        # 追加　トークン認証をデフォルトに設定
        # 'rest_framework.authentication.SessionAuthentication',    # 追加　セッションID認証を共通設定に追加
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',   # 追加　認証必要をデフォルトに設定
    ]
}

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

###### ↓認証系の設定 #####
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',  # おまじない
    'allauth.account.auth_backends.AuthenticationBackend',  # おまじない（ライブラリ使用のために追記）
)

ACCOUNT_AUTHENTICATION_METHOD = 'username'  # ログイン認証方法にemailを選定
ACCOUNT_USERNAME_REQUIRED = True  # USERNAMEをモデル上で入力任意に設定

ACCOUNT_EMAIL_VERIFICATION = 'none'  # ユーザー登録時に、メール認証を実行する宣言（開発環境では'none'推奨）
ACCOUNT_EMAIL_REQUIRED = False  # EMAILをモデル上で入力必須に設定

SITE_ID = 1  # おまじない。(django.contrib.sites利用時に必要な設定だが、意味は押さえなくていい。)

LOGIN_REDIRECT_URL = '/'  # ログイン成功時のリダイレクトページ
ACCOUNT_LOGOUT_REDIRECT_URL = '/accounts/login/'  # ログアウト成功時のリダイレクトページ
